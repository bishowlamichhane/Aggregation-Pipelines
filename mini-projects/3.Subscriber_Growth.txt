3. Subscriber Growth Over Time

Description: This mini-project tracks the growth of subscribers for a particular channel over time. It groups the data by date and counts how many subscribers joined on each day or month. How it was made:

We used $match to filter subscriptions for a specific channel.
$group was used to group the data by day using $dateToString on the createdAt field.
The results were sorted chronologically with $sort to track the subscriber growth over time.


---> controller Code

    const subscriberGrowth = await Subscription.aggregate([
        {
          $match: { channel: userId }  // Filter subscriptions for a specific channel
        },
        {
          $group: {
            _id: { $dateToString: { format: "%Y-%m-%d", date: "$createdAt" } },  // Group by day
            count: { $sum: 1 }
          }
        },
        {
          $sort: { _id: 1 }  // Sort by date
        }
      ]);
      
      console.log(subscriberGrowth);
      



/*

Explanation:

$match: Filters subscriptions for a specific channel (userId).

$group: Groups the subscriptions by date, using $dateToString to format the createdAt field as a date string.

$sort: Sorts by date in ascending order to track growth over time

*/